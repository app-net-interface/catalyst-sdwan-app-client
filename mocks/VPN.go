// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	vpn "github.com/app-net-interface/catalyst-sdwan-app-client/vpn"
)

// VPN is an autogenerated mock type for the VPN type
type VPN struct {
	mock.Mock
}

// List provides a mock function with given fields: ctx, cloudType
func (_m *VPN) List(ctx context.Context, cloudType string) ([]*vpn.Data, error) {
	ret := _m.Called(ctx, cloudType)

	var r0 []*vpn.Data
	if rf, ok := ret.Get(0).(func(context.Context, string) []*vpn.Data); ok {
		r0 = rf(ctx, cloudType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*vpn.Data)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, cloudType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewVPN interface {
	mock.TestingT
	Cleanup(func())
}

// NewVPN creates a new instance of VPN. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewVPN(t mockConstructorTestingTNewVPN) *VPN {
	mock := &VPN{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
